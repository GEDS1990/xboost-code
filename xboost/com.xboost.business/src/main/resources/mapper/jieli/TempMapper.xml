<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xboost.mapper.jieli.TempMapper">
    <cache/>
    <insert id="save" >
        INSERT into t_jieli_temp(scenarios_name,scenarios_category,scenarios_desc,scenarios_model,scenarios_out,
        scenarios_status,last_open_time,simulate_finish_time,str1,str2,str3,createtime,updatetime)
        VALUES (#{scenariosName},#{scenariosCategory},#{scenariosDesc},#{scenariosModel},#{scenariosOut},
        #{scenariosStatus},#{lastOpenTime},#{simulateFinishTime},#{str1},#{str2},#{str3},#{createTime},#{updateTime})
    </insert>

    <select id="findAll01" resultType="map">
        select
            m_od_id, scenario, scenario_lim1, scenario_lim2, i_route_id, distance, time, demand, point1, point2,
            point3, point4, connection1, connection2, connection3, time1, time2, time3, dist1, dist2, dist3, timecost,
            wait_time, timebucket_1, timebucket_2, timebucket_3, timebucket_4, timebucket_5, timebucket_6, timebucket_7,
            timebucket_8, timebucket_9, timebucket_10, timebucket_11, timebucket_12, timebucket_13, timebucket_14,
            timebucket_15, timebucket_16, timebucket_17, timebucket_18, timebucket_19, timebucket_20, timebucket_21, time_id1,
            time_id2
        from
        (select
            *, 1 as time_id1, 2 as time_id2, connection1||'-t1' as timebucket_1,connection2||'-t2' as timebucket_2,
            '' as timebucket_3, '' as timebucket_4, '' as timebucket_5, '' as timebucket_6, '' as timebucket_7,
            '' as timebucket_8, '' as timebucket_9, '' as timebucket_10, '' as timebucket_11, '' as timebucket_12,
            '' as timebucket_13, '' as timebucket_14, '' as timebucket_15, '' as timebucket_16, '' as timebucket_17,
            '' as timebucket_18, '' as timebucket_19, '' as timebucket_20, '' as timebucket_21
        from t_jieli_three_points_route) as three_points_route
    </select>
    <select id="findAll02" resultType="map">
        select *, 1 as time_id1, 2 as time_id2, 3 as time_id3 ,connection1||'-t1' as timebucket_1,
            connection2||'-t2' as timebucket_2,connection3||'-t3' as timebucket_3, '' as timebucket_4, '' as timebucket_5, '' as timebucket_6, '' as timebucket_7,
            '' as timebucket_8, '' as timebucket_9, '' as timebucket_10, '' as timebucket_11, '' as timebucket_12, '' as timebucket_13, '' as timebucket_14,
            '' as timebucket_15, '' as timebucket_16, '' as timebucket_17, '' as timebucket_18, '' as timebucket_19, '' as timebucket_20, '' as timebucket_21
        from t_jieli_four_points_route
    </select>
    <select id="findAll03" resultType="map">
        select *
        from
        t_site_distance
    </select>
    <select id="findAll04" resultType="map">
        select *, connection||'-t21' as timebucket from t_jieli_temp
    </select>
    <select id="findAll05" resultType="map">
        select t1.*,
            t2.dummy_id as dummy_in_id
        from
            t_jieli_connection t1
        left join
            t_jieli_id_mapping t2
        on
            t1.inbound_id=t2.m_od_id
    </select>

    <select id="findAllTwoPointsRoute" resultType="map">
        select
            t1.id as m_od_id,
            t1.site_collect||'-'||t1.site_delivery as i_route_id,
            t2.car_distance as distance,
            t2.duration_night_delivery as time,
            t1.votes as demand,
            t1.site_collect as point1,
            t1.site_collect as inbound_id,
            t1.site_delivery as outbound_id,
            0 as point2,
            0 as point3,
            t1.site_delivery as point4,
            t1.site_collect||'-'||t1.site_delivery as connection1,
            '' as connection2,
            '' as connection3,
            t2.duration_night_delivery as time1,
            1 as time_id1,
            0 as time2,
            0 as time3,
            t2.car_distance as dist1,
            0 as dist2,
            0 as dist3,
            -t2.duration_night_delivery as timecost,
            '1' as scenario,
            '1' as scenario_lim1,
            '9' as scenario_lim2,
            0 as wait_time
        from t_demand_info t1 ,t_site_distance t2
            where 1=1
        and t1.scenariosId = #{OpenScenariosId}
        and t1.site_collect=t2.site_collect
        and t1.site_delivery=t2.site_delivery
    </select>

    <select id="findAll06" resultType="map">
        select t1.*,
        t2.dummy_id as dummy_out_id
        from t_jieli_connection2 t1
        left join t_jieli_id_mapping t2
        on t1.outbound_id=t2.m_od_id
    </select>

    <select id="findAll07" resultType="map">
        select t1.*,
        t2.网点名称 as point1_name,
        t3.网点名称 as point2_name,
        t4.网点名称 as point3_name,
        t5.网点名称 as point4_name
        from route_opt t1
        left join jisan_candidates t2
        on t1.point1=t2.depot_id
        left join jisan_candidates t3
        on t1.point2=t3.depot_id
        left join jisan_candidates t4
        on t1.point3=t4.depot_id
        left join jisan_candidates t5
        on t1.point4=t5.depot_id
    </select>

    <select id="findAll08" resultType="map">
        select timebucket,sum(volume) as volume,
        sum(route_cnt) as route_cnt
        from (select timebucket_1 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_2 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_3 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_4 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_5 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_6 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_7 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_8 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_9 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_10 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_11 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_12 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_13 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_14 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_15 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_16 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_17 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_18 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_19 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_20 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        union all select timebucket_21 as timebucket,sum(demand) as volume,
        count(*) as route_cnt
        from route_opt
        where route_open=1
        group by 1
        )
        where timebucket !=''
        group by 1
    </select>

    <select id="findByParam" parameterType="map">
        SELECT * from t_jieli_temp
        <where>
            1 = 1
            <if test="userId != null and userId != ''">
                and id in (select scenariosId from t_jieli_temp where userId=#{userId})
            </if>
            <if test="keyword != null and keyword != ''">
                and scenarios_name LIKE #{keyword} or scenarios_category like #{keyword} or scenarios_desc like #{keyword}
            </if>
        </where>
        order by ${orderColumn} ${orderType}
        limit ${start},${length}
    </select>

    <select id="findAllCount" resultType="long">
        SELECT COUNT(*) FROM t_jieli_temp where id in (select scenariosId from t_scenarios_user where userId=#{userId})
    </select>


    <select id="findCountByParam" resultType="long" parameterType="map">
        SELECT count(*) FROM t_jieli_temp
        <where>
            1 = 1
            <if test="userId != null and userId != ''">
                and id in (select scenariosId from t_scenarios_user where userId=#{userId})
            </if>
            <if test="keyword != null and keyword != ''">
                and scenarios_name LIKE #{keyword} or scenarios_category like #{keyword} or scenarios_desc like #{keyword}
            </if>
        </where>
    </select>

    <delete id="delById">
        DELETE FROM t_jieli_temp WHERE scenariosId = #{id} and userId = #{userId}
    </delete>
</mapper>