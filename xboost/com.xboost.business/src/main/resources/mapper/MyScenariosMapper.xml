<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xboost.mapper.MyScenariosMapper">



    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT into t_scenarios_info(scenarios_name,scenarios_category,scenarios_desc,scenarios_model,scenarios_out,
        scenarios_status,last_open_time,simulate_finish_time,str1,str2,str3,createtime,updatetime)
        VALUES (#{scenariosName},#{scenariosCategory},#{scenariosDesc},#{scenariosModel},#{scenariosOut},
        #{scenariosStatus},#{lastOpenTime},#{simulateFinishTime},#{str1},#{str2},#{str3},#{createTime},#{updateTime})
    </insert>

    <insert id="saveScenariosIduserId">
        insert into t_scenarios_user(scenariosId,userId) values(#{scenariosId},#{userId})
    </insert>

    <insert id="addCategory">
        INSERT into t_scenarios_category(user_id,category_name,str1,str2,create_time,update_time)
        VALUES (#{userId},#{categoryName},#{str1},#{str2},#{createTime},#{updateTime})
    </insert>

    <select id="findCategory" parameterType="map" resultType="com.xboost.pojo.ScenariosCategory" resultMap="categoryMap">
        SELECT * FROM t_scenarios_category where user_id=#{userId}
    </select>

    <select id="findAll" resultType="com.xboost.pojo.Scenarios">
        SELECT * FROM t_scenarios_info where id in (select scenariosId from t_scenarios_user where userId=#{userId})
    </select>

    <select id="findByParam" parameterType="map" resultType="Scenarios" resultMap="scenariosMap">
        SELECT * from t_scenarios_info
        <where>
            1 = 1
            <if test="userId != null and userId != ''">
                and id in (select scenariosId from t_scenarios_user where userId=#{userId})
            </if>
            <if test="keyword != null and keyword != ''">
                and scenarios_name LIKE #{keyword} or scenarios_category like #{keyword} or scenarios_desc like #{keyword}
            </if>
        </where>
        order by ${orderColumn} ${orderType}
        limit ${start},${length}
    </select>

    <select id="findAllCount" resultType="long">
        SELECT COUNT(*) FROM t_scenarios_info where id in (select scenariosId from t_scenarios_user where userId=#{userId})
    </select>

    <select id="findAllScenariosCount" resultType="long">
        SELECT COUNT(*) FROM t_scenarios_info where id in (select scenariosId from t_scenarios_user)
    </select>

    <update id="updateFinishTime" parameterType="String">
        update t_scenarios_info set simulate_finish_time = #{finishTime} where id = #{openScenariosId}
    </update>

    <update id="updateStatus" parameterType="String">
        update t_scenarios_info set scenarios_status = #{status} where id = #{openScenariosId}
    </update>

    <select id="findCountByParam" resultType="long" parameterType="map">
        SELECT count(*) FROM t_scenarios_info
        <where>
            1 = 1
            <if test="userId != null and userId != ''">
                and id in (select scenariosId from t_scenarios_user where userId=#{userId})
            </if>
            <if test="keyword != null and keyword != ''">
                and scenarios_name LIKE #{keyword} or scenarios_category like #{keyword} or scenarios_desc like #{keyword}
            </if>
        </where>
    </select>

    <select id="findById" resultType="com.xboost.pojo.Scenarios"  resultMap="scenariosMap">
        SELECT * FROM t_scenarios_info where id = #{id}
    </select>

    <update id="edit">
        UPDATE t_scenarios_info SET scenarios_name = #{scenariosName},scenarios_category=#{scenariosCategory},
        scenarios_desc=#{scenariosDesc},scenarios_model=#{scenariosModel},scenarios_out=#{scenariosOut},
        scenarios_status=#{scenariosStatus},last_open_time=#{lastOpenTime},simulate_finish_time=#{simulateFinishTime} where id = #{id}
    </update>

    <update id="updateOpenTime">
        UPDATE t_scenarios_info SET last_open_time=#{openTime} where id = #{openScenariosId}
    </update>


    <delete id="delById">
        DELETE FROM t_scenarios_user WHERE scenariosId = #{id} and userId = #{userId}
    </delete>

    <update id="sendToUserByScenariosId">
        insert into  t_scenarios_user (userId,scenariosId) values(#{userIdTemp},#{scenariosId})
    </update>


    <resultMap id="scenariosMap" type="Scenarios">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="scenariosName" column="scenarios_name"/>
        <result property="scenariosCategory" column="scenarios_category"/>
        <result property="scenariosDesc" column="scenarios_desc"/>
        <result property="scenariosModel" column="scenarios_model"/>
        <result property="scenariosOut" column="scenarios_out"/>
        <result property="scenariosStatus" column="scenarios_status"/>
        <result property="lastOpenTime" column="last_open_time"/>
    </resultMap>

    <resultMap id="categoryMap" type="ScenariosCategory">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="categoryName" column="category_name"/>
    </resultMap>



</mapper>