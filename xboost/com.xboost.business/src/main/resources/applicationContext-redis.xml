<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Spring读取Properties配置文件-->
    <context:property-placeholder location="classpath:config.properties"/>
    <!--redis start-->
    <!--必须，否则方法拦截无效-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--方法拦截类配置-->
    <!--<bean id="methodCacheInterceptor" class="com.xboost.interceptor.MethodCacheInterceptor" >-->
        <!--<property name="redisUtil" ref="redisUtil" />-->
    <!--</bean >-->
    <!-- 需要加入缓存的类或方法  proxy-target-class="true"-->
    <!--<bean id="methodCachePointCut"  class="org.springframework.aop.support.RegexpMethodPointcutAdvisor ">-->
        <!--<property name="advice" ref="methodCacheInterceptor" />-->
        <!--<property name="patterns" >-->
            <!--<list>-->
                <!--<value>.*load.*</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean >-->
    <!--<bean id="methodCachePointCut"  class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">-->
    <!--<property name="advice" ref="methodCacheInterceptor" />-->
    <!--<property name="mappedName" >-->
    <!--<value>.*load.*</value>-->
    <!--</property>-->
    <!--</bean >-->
    <!--<bean id="controllerInterceptor" class="com.xboost.interceptor.ControllerInterceptor"/>-->
    <!--<bean id="handlerMapping"-->
    <!--class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
    <!--<property name="interceptors">-->
    <!--<list>-->
    <!--<ref bean="controllerInterceptor" />-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="mappings">-->
    <!--<props>-->
    <!--<prop key="/efficiency/arrCarNum.json">SolutionEfficiencyController</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->
    <!-- redis数据源 -->
    <bean id="jedispoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
    <!-- 配置connectionFactory，提供redis服务器相关连接参数 -->
    <bean id="jedisconnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="poolConfig" ref="jedispoolConfig" />
        <property name="port" value="${redis.port}" />
        <property name="hostName" value="${redis.host}" />
        <property name="password" value="${redis.pass}" />
        <property name="timeout" value="${redis.timeout}" />
    </bean >
    <!-- 配置spring的redisTemplate，注入connectionFactory，指定key和value的序列化类 -->

    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="jedisconnectionFactory" />
        <property name="keySerializer" >
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean >
    <!-- 配置redis工具类，注入redisTemplate -->

    <bean id="redisUtil" class="com.xboost.util.RedisUtil" >  <!--根据实际包名修改-->
        <property name="redisTemplate" ref="redisTemplate" />
    </bean >
    <!--redis end-->

</beans>